"""Вот вам текст: «Ну, вышел я, короче, из подъезда. В общем, короче говоря, шел я, кажется, в магазин. Ну,эээ,
в общем, было лето, кажется. Как бы тепло. Солнечно, короче. Иду я, иду, в общем, по улице, а тут, короче, яма. Я,
эээээ…. Упал в нее. И снова вышел, короче, из подъезда. Ясен пень, в магазин. В общем, лето на дворе, жарко,
солнечно, птицы, короче, летают. Кстати, иду я по улице, иду, а тут, короче, яма. Ну, я в нее упал, в общем. Вышел из
подъезда, короче. Лето на дворе, ясен пень. Птицы поют, короче, солнечно. В общем, в магазин мне надо. Что-то явно не
так, короче. «Рекурсия», - подумал я. Ээээ...короче, в общем, пошел другой дорогой и не упал в эту… ээээ… яму. Хлеба
купил». Отфильтруйте его, чтобы эту фигню можно было прочесть. Предусмотрите вариант, что мусорные слова могли быть
написаны без использования запятых. """

text = "Ну, вышел я, короче, из подъезда. В общем, короче говоря, шел я, кажется, в магазин. Ну,эээ, в общем, " \
       "было лето, кажется. Как бы тепло. Солнечно, короче. Иду я, иду, в общем, по улице, а тут, короче, яма. Я, " \
       "эээээ…. Упал в нее. И снова вышел, короче, из подъезда. Ясен пень, в магазин. В общем, лето на дворе, жарко, " \
       "солнечно, птицы, короче, летают. Кстати, иду я по улице, иду, а тут, короче, яма. Ну, я в нее упал, " \
       "в общем. Вышел из подъезда, короче. Лето на дворе, ясен пень. Птицы поют, короче, солнечно. В общем, " \
       "в магазин мне надо. Что-то явно не так, короче. «Рекурсия», - подумал я. Ээээ...короче, в общем, пошел другой " \
       "дорогой и не упал в эту… ээээ… яму. Хлеба купил "


def filter_text(txt):
    def del_word(text, word):
        find = text.lower().find(word)
        while find != -1:
            repl_str = text[find:find + len(word)]
            text = text.replace(repl_str, '')
            find = text.lower().find(word)
        return text

    def clean_text(text: str):
        if text.startswith(', '):
            text = text.replace(', ', '', 1)
        text = text.replace('.,', '.').replace(', .', '.').replace('  ', ' ')
        text = text[0].upper() + text[1:]
        find_index = 0
        while find_index < len(text):
            # print(f'{find_index=} len={len(text)}')
            find = text.find('.', find_index) + 2
            if find < find_index:
                break
            text = text[:find] + text[find:find + 2].capitalize() + text[find + 2:]
            find_index = find
        return text

    filter_list = ['короче говоря', 'короче', 'эээээ', 'ээээ', 'эээ', 'ну', 'ясен пень', 'в общем',
                   'кажется', 'как бы', '….', '…', '...', 'кстати', ' ,']
    for filter_word in filter_list:
        txt = del_word(txt, filter_word)
    txt = clean_text(txt)
    return txt


if __name__ == '__main__':
    from pprint import pprint

    new_text = filter_text(text)
    pprint(new_text)
